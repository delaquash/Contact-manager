{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/Layout/Header.js","components/Layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/Pages/About.js","components/test/Test.js","components/Pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","a","delete","name","email","phone","className","onClick","style","cursor","color","float","bind","to","marginRight","Contacts","Fragment","key","Header","branding","href","defaultProps","TextInputGroup","label","onChange","placeholder","error","htmlFor","classnames","AddContact","errors","onSubmit","e","preventDefault","newContact","post","history","push","target","EditContact","updateContact","match","params","put","About","Test","console","log","NotFound","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.850c798e.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer =(state, action) => {\r\n    switch (action.type){\r\n        case 'DELETE_CONTACT':\r\n        return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n            contact=> contact.id !== action.payload\r\n        )\r\n      };\r\n       case 'ADD_CONTACT':\r\n        return {\r\n        ...state,\r\n        contacts: [action.payload,\r\n        ...state.contacts ]\r\n\r\n      };\r\n      case 'UPDATE_CONTACT':\r\n        return{\r\n            ...state,\r\n            contacts: state.contacts.map (\r\n                contact =>\r\n                contact.id === action.payload.id ? (contact = action.payload)\r\n                    : contact\r\n            )\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport class Provider extends Component {\r\n\r\n      state = {\r\n            contacts:[],\r\n            dispatch: action => this.setState(state=>\r\n                reducer(state, action))\r\n         };\r\n\r\n async componentDidMount() {\r\n        const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n              this.setState({\r\n                contacts: res.data\r\n            })\r\n    }\r\n\r\n\r\nrender() {\r\n    return (\r\n        <Context.Provider value={this.state}>\r\n             {this.props.children}\r\n        </Context.Provider>\r\n    )\r\n   }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { Consumer } from '../../context';\r\nimport axios from 'axios';\r\nimport { domainToASCII } from 'url';\r\n\r\n\r\n class Contact extends Component {\r\n    state = {\r\n        showContactInfo: false\r\n    };\r\n\r\n  onDeleteClick =async (id, dispatch)  => {\r\n      try {\r\n        await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n      } catch (e) {\r\n        dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n      }\r\n      };\r\n      render() {\r\n        const { id, name, email, phone } = this.props.contact;\r\n        const { showContactInfo } = this.state;\r\n\r\n        return (\r\n                    <Consumer>\r\n                        {value=>{\r\n                           const { dispatch } = value;\r\n                            return (\r\n                    <div className=\"card card-body mb-3\">\r\n                        <h4>{name}\r\n                                <i\r\n                                onClick={() =>\r\n                                this.setState({ showContactInfo: !this.state.showContactInfo })\r\n                                }\r\n                                className=\"fas fa-sort-down\"\r\n                                style={{cursor:'pointer', color:'indigo'}}\r\n                                />\r\n                                <i className=\"fas fa-times\"\r\n                                    style={{ cursor:'pointer',\r\n                                    float:'right',\r\n                                    color:'blue' }}\r\n                                    onClick={this.onDeleteClick.bind(this,id, dispatch)}\r\n                                />\r\n                                <Link to={ `contact/edit/${id}`}>\r\n                                    <i className=\"fas fa-pencil-alt\"\r\n                                    style={{\r\n                                        cursor:\"pointer\",\r\n                                        float:\"right\",\r\n                                        color:\"blue\",\r\n                                        marginRight:\"1rem\"\r\n                                    }}\r\n                                    />\r\n                                </Link>\r\n                                {showContactInfo ?(<ul className=\"list-group\">\r\n                                    <li className=\"list-group-item\">\r\n                                    Email: {email}\r\n                                    </li>\r\n                                    <li className=\"list-group-item\">Phone: {phone}</li>\r\n                                </ul>) : null}\r\n                        </h4>\r\n                    </div>\r\n                            )\r\n                        }}\r\n         </Consumer>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nContact.propTypes = {\r\ncontact: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component } from 'react';\r\nimport Contact from '../contacts/Contact';\r\n\r\nimport { Consumer } from '../../context';\r\n\r\n class Contacts extends Component {\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Consumer>\r\n                {value =>{\r\n                    const { contacts } = value;\r\n                    return (\r\n                    <React.Fragment>\r\n                        <h1 className=\"display-4 mb-2\"><span className=\"text-danger\">Contact</span> List</h1>\r\n                            {contacts.map(contact =>\r\n                            <Contact\r\n                            key={contact.id}\r\n                            contact={contact}\r\n                            />\r\n                            )}\r\n                    </React.Fragment>\r\n                    )}}\r\n            </Consumer>\r\n        )\r\n    }\r\n }\r\nexport default Contacts;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst Header = (props) => {\r\n    const { branding }= props;\r\n    return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n        <div className=\"container\">\r\n            <a href=\"/\" className=\"navbar-brand\">\r\n                {branding}\r\n            </a>\r\n            <div>\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/\" className=\"nav-link\">\r\n                        <i className=\"fas fa-home\" />   Home\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/contact/add\" className=\"nav-link\">\r\n                          <i className=\"fas fa-plus\" />  Add\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/about\" className=\"nav-link\">\r\n                        <i className=\"fas fa-question\" />   About\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    </nav>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\nbranding: 'My App'\r\n};\r\n\r\nHeader.propTypes = {\r\n    branding: PropTypes.string.isRequired\r\n};\r\nexport default Header;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\n\r\nconst TextInputGroup = ({\r\n    label,\r\n    name,\r\n    value,\r\n    placeholder,\r\n    onChange,\r\n    type,\r\n    error\r\n\r\n}) => {\r\n    return (\r\n          <div className=\"form-group\">\r\n                                <label htmlFor={name}>{label}</label>\r\n                                <input\r\n                                    type={type}\r\n                                    name={name}\r\n                                    className= {classnames(\"form-control form-control-lg\", {'is-invalid' : error})}\r\n                                    placeholder=\"Enter Name...\"\r\n                                    value={value}\r\n                                    onChange={onChange}\r\n                                    />\r\n                                    {error && <div className=\"invalid-feedback\">\r\n                                        {error}\r\n                                    </div>}\r\n          </div>\r\n    );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    placeholder:PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    value:PropTypes.string.isRequired,\r\n    onChange:PropTypes.func.isRequired,\r\n     error:PropTypes.string\r\n\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n    type: 'text'\r\n};\r\n\r\nexport default TextInputGroup;\r\n","\r\nimport React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport axios from 'axios';\r\nimport TextInputGroup from '../Layout/TextInputGroup';\r\nimport { async } from 'q';\r\n\r\n\r\n\r\n class AddContact extends Component {\r\n     state = {\r\n         name: \"\",\r\n         email:\"\",\r\n         phone:\"\",\r\n         errors:{}\r\n     }\r\n     onSubmit = async (dispatch, e) => {\r\n      e.preventDefault();\r\n      const { name, email, phone } = this.state;\r\n\r\n\r\n    //   Checking for errors\r\n    if(name ===''){\r\n        this.setState({ errors: {name: 'Name is required'\r\n        }});\r\n        return;\r\n    }\r\n\r\n    if(email === ''){\r\n        this.setState({ errors: {email: 'Email is required'\r\n        }});\r\n        return;\r\n    }\r\n\r\n    if(phone === ''){\r\n        this.setState({ errors: {phone: 'phone number is required'\r\n    }});\r\n    return;\r\n    }\r\n\r\n   const newContact = {\r\n          name,\r\n          email,\r\n          phone\r\n      };\r\n\r\n    const res = await axios.post (\r\n        'https://jsonplaceholder.typicode.com/users',\r\n         newContact\r\n         );\r\n           dispatch({ type: 'ADD_CONTACT', payload: res.data });\r\n\r\n    //   Clearing the State\r\n     this.setState({\r\n         name:'',\r\n         email:'',\r\n         phone:'',\r\n         errors:{}\r\n         })\r\n\r\n         this.props.history.push('/');\r\n      };\r\n     onChange = e => this.setState ({ [e.target.name] : e.target.value });\r\n\r\n     render() {\r\n         const { name, email, phone, errors } = this.state;\r\n\r\n         return (\r\n                <Consumer>\r\n                    {value => {\r\n                        const { dispatch } = value;\r\n                        return (\r\n                            <div className=\"card mb-3\">\r\n                    <div className=\"card-header\">Add Contact</div>\r\n                    <div className=\"card-body\">\r\n                        <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                       <TextInputGroup\r\n                            label=\"Name\"\r\n                            name=\"name\"\r\n                            placeholder=\"Enter name...\"\r\n                            value={name}\r\n                            onChange={this.onChange}\r\n                            error={errors.name}\r\n                       />\r\n                        <TextInputGroup\r\n                            label=\"Email\"\r\n                            name=\"email\"\r\n                            type=\"email\"\r\n                            placeholder=\"Enter Email...\"\r\n                            value={email}\r\n                            onChange={this.onChange}\r\n                            error={errors.email}\r\n\r\n                        />\r\n                        <TextInputGroup\r\n                            label=\"Phone\"\r\n                            name=\"phone\"\r\n                            placeholder=\"Enter Phone Number...\"\r\n                            value={phone}\r\n                            onChange={this.onChange}\r\n                             error={errors.phone}\r\n                        />\r\n                        <input\r\n                            type=\"submit\"\r\n                            value=\"AddContact\"\r\n                            className=\"btn btn-block\"\r\n                            />\r\n                        </form>\r\n                </div>\r\n            </div>\r\n\r\n                        )\r\n                    }}\r\n                </Consumer>\r\n         )\r\n    }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport axios from 'axios';\r\nimport TextInputGroup from '../Layout/TextInputGroup';\r\nimport { async } from 'q';\r\nimport Contact from './Contact';\r\n\r\n\r\n\r\n class EditContact extends Component {\r\n     state = {\r\n         name: \"\",\r\n         email:\"\",\r\n         phone:\"\",\r\n         errors:{}\r\n     }\r\nasync componentDidMount(){\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get\r\n        (`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n        const contact = res.data;\r\n\r\n        this.setState ({\r\n              name:contact.name,\r\n              email:contact.email,\r\n               phone:contact.phone\r\n        })\r\n\r\n}\r\n\r\n\r\n\r\n     onSubmit = async (dispatch, e) => {\r\n      e.preventDefault();\r\n      const { name, email, phone } = this.state;\r\n\r\n\r\n    //   Checking for errors\r\n    if(name ===''){\r\n        this.setState({ errors: {name: 'Name is required'\r\n        }});\r\n        return;\r\n    }\r\n\r\n    if(email === ''){\r\n        this.setState({ errors: {email: 'Email is required'\r\n        }});\r\n        return;\r\n    }\r\n\r\n    if(phone === ''){\r\n        this.setState({ errors: {phone: 'phone number is required'\r\n    }});\r\n    return;\r\n    }\r\n\r\n    const updateContact = {\r\n        name,\r\n        email,\r\n        phone\r\n\r\n    }\r\n\r\n    const { id } = this.props.match.params;\r\n\r\n    const res = await axios.put (\r\n        `https://jsonplaceholder.typicode.com/user/${id}`, updateContact\r\n    );\r\n        dispatch({ type: 'UPDATE_CONTACT', payload: res.data });\r\n\r\n\r\n    //   Clearing the State\r\n     this.setState({\r\n         name:'',\r\n         email:'',\r\n         phone:'',\r\n         errors:{}\r\n         })\r\n\r\n         this.props.history.push('/');\r\n      };\r\n     onChange = e => this.setState ({ [e.target.name] : e.target.value });\r\n\r\n     render() {\r\n         const { name, email, phone, errors } = this.state;\r\n\r\n         return (\r\n                <Consumer>\r\n                    {value => {\r\n                        const { dispatch } = value;\r\n                        return (\r\n                            <div className=\"card mb-3\">\r\n                    <div className=\"card-header\">Edit Contact</div>\r\n                    <div className=\"card-body\">\r\n                        <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                       <TextInputGroup\r\n                            label=\"Name\"\r\n                            name=\"name\"\r\n                            placeholder=\"Enter name...\"\r\n                            value={name}\r\n                            onChange={this.onChange}\r\n                            error={errors.name}\r\n                       />\r\n                        <TextInputGroup\r\n                            label=\"Email\"\r\n                            name=\"email\"\r\n                            type=\"email\"\r\n                            placeholder=\"Enter Email...\"\r\n                            value={email}\r\n                            onChange={this.onChange}\r\n                            error={errors.email}\r\n\r\n                        />\r\n                        <TextInputGroup\r\n                            label=\"Phone\"\r\n                            name=\"phone\"\r\n                            placeholder=\"Enter Phone Number...\"\r\n                            value={phone}\r\n                            onChange={this.onChange}\r\n                             error={errors.phone}\r\n                        />\r\n                        <input\r\n                            type=\"submit\"\r\n                            value=\"Update Contact\"\r\n                            className=\"btn btn-block\"\r\n                            />\r\n                        </form>\r\n                </div>\r\n            </div>\r\n\r\n                        )\r\n                    }}\r\n                </Consumer>\r\n         )\r\n    }\r\n}\r\n\r\nexport default EditContact;\r\n","import React from 'react';\r\n\r\n const About = () => {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">About Contact Manager</h1>\r\n            <p className=\"lead\">Simple App To Manage Contact</p>\r\n            <p className=\"text-secondary\">Version 1.0.0</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About;\r\n","import React, { Component } from 'react';\r\n\r\nclass Test extends Component  {\r\n    componentDidMount(){\r\n        console.log('component did mount....')\r\n    }\r\n    render(){\r\n    return (\r\n        <div>\r\n        <h1>Test</h1>\r\n        </div>\r\n    )\r\n}\r\n}\r\n\r\n\r\nexport default Test;\r\n","import React from 'react';\r\n\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\"> <span className=\"text-danger\">404</span>  Page not Found</h1>\r\n            <p className=\"lead\">Sorry, the page you requested does not exist</p>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default NotFound;\r\n","import React from 'react';\nimport Contacts from './components/contacts/Contacts';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Header from './components/Layout/Header';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport { Provider } from './context';\nimport About from './components/Pages/About';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport Contact from './components/contacts/Contact';\nimport Test from './components/test/Test';\nimport NotFound from './components/Pages/NotFound';\n\n\n\n\nclass App extends React.Component {\n  render(){\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n              <Header  branding=\"Contact Manager\" />\n                <div className=\"container\">\n                <Switch>\n                  <Route exact path=\"/\" component={Contacts} />\n                  <Route exact path=\"/contact/add\" component={AddContact} />\n                  <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                  <Route exact path=\"/About\" component={About} />\n                  <Route exact path='/Test'  component={Test} />\n                  <Route exact component={NotFound} />\n                </Switch>\n                </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}